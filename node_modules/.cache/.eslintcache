[{"C:\\Denmark studies\\4th semester\\WEB\\assignment3\\pokedex\\src\\index.js":"1","C:\\Denmark studies\\4th semester\\WEB\\assignment3\\pokedex\\src\\App.js":"2","C:\\Denmark studies\\4th semester\\WEB\\assignment3\\pokedex\\src\\pages\\About.js":"3","C:\\Denmark studies\\4th semester\\WEB\\assignment3\\pokedex\\src\\components\\PokemonZoo.js":"4","C:\\Denmark studies\\4th semester\\WEB\\assignment3\\pokedex\\src\\components\\Pokemon.js":"5","C:\\Denmark studies\\4th semester\\WEB\\assignment3\\pokedex\\src\\pages\\Home.js":"6"},{"size":372,"mtime":1682293147995,"results":"7","hashOfConfig":"8"},{"size":940,"mtime":1682296895404,"results":"9","hashOfConfig":"8"},{"size":1776,"mtime":1682289916477,"results":"10","hashOfConfig":"8"},{"size":2691,"mtime":1682293961804,"results":"11","hashOfConfig":"8"},{"size":5946,"mtime":1682296987482,"results":"12","hashOfConfig":"8"},{"size":270,"mtime":1682296579242,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1t8ikzs",{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Denmark studies\\4th semester\\WEB\\assignment3\\pokedex\\src\\index.js",[],[],"C:\\Denmark studies\\4th semester\\WEB\\assignment3\\pokedex\\src\\App.js",[],[],[],"C:\\Denmark studies\\4th semester\\WEB\\assignment3\\pokedex\\src\\pages\\About.js",[],[],[],"C:\\Denmark studies\\4th semester\\WEB\\assignment3\\pokedex\\src\\components\\PokemonZoo.js",["36"],[],"import React, { useEffect, useState, } from \"react\";\r\nimport Pokemon from \"./Pokemon\";\r\nimport '../css/Poke-style.css'\r\n\r\nconst PokemonZoo = () => {\r\n  const [pokeData, setPokeData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [url, setUrl] = useState(\"https://pokeapi.co/api/v2/pokemon/\");\r\n  const [nextUrl, setNextUrl] = useState();\r\n  const [prevUrl, setPrevUrl] = useState();\r\n  const [disable, setDisable] = useState(true);\r\n\r\n  const pokeFunc = async () => {\r\n    const res = await fetch(url);\r\n    const data = await res.json();\r\n    const limit = 15;\r\n\r\n    setNextUrl(data.next);\r\n    setPrevUrl(data.previous);\r\n    getPokemonData(data.results, limit);\r\n    setLoading(false);\r\n\r\n    console.log(\"PREV\", data.previous);\r\n    console.log(\"NEXT\", data.next);\r\n\r\n    if (data.previous != null) {\r\n      setDisable(false);\r\n    } else {\r\n      setDisable(true);\r\n    }\r\n  };\r\n\r\n  const getPokemonData = async (results, limit) => {\r\n    const pokemonList = await Promise.all(\r\n      results.slice(0, limit).map(async (item) => {\r\n        const res = await fetch(item.url);\r\n        const data = await res.json();\r\n        return data;\r\n      })\r\n    );\r\n\r\n    setPokeData((prevState) => {\r\n      const newState = [...prevState, ...pokemonList];\r\n      newState.sort((a, b) => (a.id > b.id ? 1 : -1));\r\n      const filteredState = newState.filter(\r\n        (pokemon, index, self) => index === self.findIndex((p) => p.id === pokemon.id)\r\n      );\r\n      return filteredState;\r\n    });\r\n  };\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    pokeFunc();\r\n  }, [url, pokeFunc]);\r\n\r\n  return (\r\n    <>\r\n      <div class=\"poke-container\">\r\n        <Pokemon pokemon={pokeData} loading={loading}></Pokemon>\r\n\r\n        <div className=\"btn-div\">\r\n          {prevUrl ?\r\n            (\r\n              <button\r\n                type=\"button\"\r\n                disabled={disable}\r\n                className=\"btn btn-func space\"\r\n                onClick={() => {\r\n                  setPokeData([]);\r\n                  setUrl(prevUrl);\r\n                }}\r\n              >\r\n                Previous\r\n              </button>\r\n            ) : (\r\n              <button\r\n                type=\"button\"\r\n                disabled={disable}\r\n                className=\"btn btn-func space\"\r\n              >\r\n                Previous\r\n              </button>\r\n            )}\r\n\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-func\"\r\n            onClick={() => {\r\n              setPokeData([]);\r\n              setUrl(nextUrl);\r\n            }}\r\n          >\r\n            Next\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PokemonZoo;\r\n","C:\\Denmark studies\\4th semester\\WEB\\assignment3\\pokedex\\src\\components\\Pokemon.js",["37","38"],[],"import React, { useState } from \"react\";\r\nimport Modal from \"react-modal\";\r\nimport \"../css/Poke-style.css\";\r\n\r\nconst Pokemon = ({ pokemon, loading }) => {\r\n    const [showModal, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n    const [pokeId, setPokeId] = useState(\"\");\r\n    const [pokeName, setPokeName] = useState(\"\");\r\n    const [pokeHeight, setPokeHeight] = useState(\"\");\r\n    const [pokeWeight, setPokeWeight] = useState(\"\");\r\n    const [pokeAbilities, setPokeAbilities] = useState([]);\r\n    const [pokeTypes, setPokeTypes] = useState([]);\r\n    const [pokeStats, setPokeStats] = useState([]);\r\n    const [pokeImg, setPokeImg] = useState();\r\n\r\n    const openPokeInfo = async (res) => {\r\n        setPokeId(res.id)\r\n        setPokeName(res.name);\r\n        setPokeHeight(res.height);\r\n        setPokeWeight(res.weight);\r\n        setPokeAbilities(res.abilities);\r\n        setPokeTypes(res.types);\r\n        setPokeStats(res.stats);\r\n        setPokeImg(res.sprites.front_default);\r\n        handleShow();\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                isOpen={showModal}\r\n                onRequestClose={handleClose}\r\n                contentLabel=\"Poke Info\"\r\n                ariaHideApp={false}\r\n                style={{\r\n                    overlay: { backgroundColor: 'rgba(158, 42, 43, 0.4)' },\r\n                    content: {\r\n                        position: 'absolute',\r\n                        top: '20%',\r\n                        left: '20%',\r\n                        right: '20%',\r\n                        bottom: '40px',\r\n                        background: 'rgba(158, 42, 43, 0)',\r\n                        border: '0px'\r\n                    }\r\n                }}\r\n            >\r\n                <div class=\"poke-content\">\r\n                    <button class=\"btn-func btn\" onClick={handleClose}>\r\n                        X\r\n                    </button>\r\n\r\n                    <h2 class=\"poke-name\">{pokeId} : {pokeName}</h2>\r\n                    <img\r\n                        src={pokeImg}\r\n                        alt=\"Image\"\r\n                        class=\"poke-image\"\r\n                    ></img>\r\n                    <div class=\"attribute-list\">\r\n                        <p><span class=\"attribute-name\">Types:</span> {pokeTypes.map(type => type.type.name).join(\", \")}</p>\r\n                        <p><span class=\"attribute-name\">Height:</span> {pokeHeight}</p>\r\n                        <p><span class=\"attribute-name\">Weight:</span> {pokeWeight}</p>\r\n                        <p><span class=\"attribute-name\">Abilities:</span> {pokeAbilities.map(ability => ability.ability.name).join(\", \")}</p>\r\n                        <p>\r\n                            {pokeStats.length > 0 ? (\r\n                                <span class=\"table-container\">\r\n                                    <table class=\"stat-view\">\r\n                                    <p class=\"stat-style\">Stats:</p>\r\n                                        <tr>\r\n                                            <th>HP</th>\r\n                                            <td>{pokeStats[0].base_stat}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <th>ATTACK</th>\r\n                                            <td>{pokeStats[1].base_stat}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <th>DEFENCE</th>\r\n                                            <td>{pokeStats[2].base_stat}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <th>SPECIAL-ATTACK</th>\r\n                                            <td>{pokeStats[3].base_stat}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <th>SPECIAL-DEFENCE</th>\r\n                                            <td>{pokeStats[4].base_stat}</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <th>SPEED</th>\r\n                                            <td>{pokeStats[5].base_stat}</td>\r\n                                        </tr>\r\n                                    </table>\r\n                                </span>\r\n                            ) : (\r\n                                <p>No stats available.</p>\r\n                            )}\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n\r\n            <div class=\"row align\">\r\n                {loading ? (\r\n                    <h1>Loading...</h1>\r\n                ) : (\r\n                    pokemon\r\n                        .filter((item) => {\r\n                            return item;\r\n                        })\r\n                        .map((item) => {\r\n                            return (\r\n                                <div key={item.id}>\r\n                                    <div class=\"poke-card\" onClick={() => openPokeInfo(item)}>\r\n                                        <img\r\n                                            src={item.sprites.front_default}\r\n                                            alt=\"Poke-card image\"\r\n                                            class=\"poke-card-image\"\r\n                                        />\r\n                                        <div>\r\n                                            <h5 class=\"poke-name\">{item.name}</h5>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            );\r\n                        })\r\n                )}\r\n            </div>\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Pokemon;\r\n","C:\\Denmark studies\\4th semester\\WEB\\assignment3\\pokedex\\src\\pages\\Home.js",[],[],{"ruleId":"39","severity":1,"message":"40","line":13,"column":9,"nodeType":"41","endLine":31,"endColumn":4},{"ruleId":"42","severity":1,"message":"43","line":56,"column":21,"nodeType":"44","endLine":60,"endColumn":22},{"ruleId":"42","severity":1,"message":"43","line":117,"column":41,"nodeType":"44","endLine":121,"endColumn":43},"react-hooks/exhaustive-deps","The 'pokeFunc' function makes the dependencies of useEffect Hook (at line 56) change on every render. Move it inside the useEffect callback. Alternatively, wrap the definition of 'pokeFunc' in its own useCallback() Hook.","VariableDeclarator","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement"]